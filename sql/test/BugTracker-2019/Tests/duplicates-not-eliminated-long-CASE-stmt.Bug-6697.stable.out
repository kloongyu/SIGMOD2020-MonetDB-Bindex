stdout of test 'duplicates-not-eliminated-long-CASE-stmt.Bug-6697` in directory 'sql/test/BugTracker-2019` itself:


# 14:08:13 >  
# 14:08:13 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33481" "--set" "mapi_usock=/var/tmp/mtest-8696/.s.monetdb.33481" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2019" "--set" "monet_daemon=yes" "--set" "embedded_c=true"
# 14:08:13 >  

# MonetDB 5 server v11.34.0 (hg id: 29627d20d2e0)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.385 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2019 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:33481/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8696/.s.monetdb.33481
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 14:08:13 >  
# 14:08:13 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8696" "--port=33481"
# 14:08:13 >  

#CREATE TABLE IF NOT EXISTS "task" (
#"sys_class_name" VARCHAR(80),
#"priority" BIGINT,
#"sys_created_on" TIMESTAMP
#);
#explain SELECT  sys.timestamp_to_str(case when task0."sys_created_on" >= '1999-10-31 09:00:00' and task0."sys_created_on" < '2000-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2000-04-02 10:00:00' and task0."sys_created_on" < '2000-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2000-10-29 09:00:00' and task0."sys_created_on" < '2001-04-01 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2001-04-01 10:00:00' and task0."sys_created_on" < '2001-10-28 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2001-10-28 09:00:00' and task0."sys_created_on" < '2002-04-07 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2002-04-07 10:00:00' and task0."sys_created_on" < '2002-10-27 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2002-10-27 09:00:00' and task0."sys_created_on" < '2003-04-06 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2003-04-06 10:00:00' and task0."sys_created_on" < '2003-10-26 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2003-10-26 09:00:00' and task0."sys_created_on" < '2004-04-04 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2004-04-04 10:00:00' and task0."sys_created_on" < '2004-10-31 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2004-10-31 09:00:00' and task0."sys_created_on" < '2005-04-03 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2005-04-03 10:00:00' and task0."sys_created_on" < '2005-10-30 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2005-10-30 09:00:00' and task0."sys_created_on" < '2006-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2006-04-02 10:00:00' and task0."sys_created_on" < '2006-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2006-10-29 09:00:00' and task0."sys_created_on" < '2007-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2007-03-11 10:00:00' and task0."sys_created_on" < '2007-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2007-11-04 09:00:00' and task0."sys_created_on" < '2008-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2008-03-09 10:00:00' and task0."sys_created_on" < '2008-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2008-11-02 09:00:00' and task0."sys_created_on" < '2009-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2009-03-08 10:00:00' and task0."sys_created_on" < '2009-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2009-11-01 09:00:00' and task0."sys_created_on" < '2010-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2010-03-14 10:00:00' and task0."sys_created_on" < '2010-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2010-11-07 09:00:00' and task0."sys_created_on" < '2011-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2011-03-13 10:00:00' and task0."sys_created_on" < '2011-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2011-11-06 09:00:00' and task0."sys_created_on" < '2012-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2012-03-11 10:00:00' and task0."sys_created_on" < '2012-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2012-11-04 09:00:00' and task0."sys_created_on" < '2013-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2013-03-10 10:00:00' and task0."sys_created_on" < '2013-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2013-11-03 09:00:00' and task0."sys_created_on" < '2014-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2014-03-09 10:00:00' and task0."sys_created_on" < '2014-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2014-11-02 09:00:00' and task0."sys_created_on" < '2015-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2015-03-08 10:00:00' and task0."sys_created_on" < '2015-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2015-11-01 09:00:00' and task0."sys_created_on" < '2016-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2016-03-13 10:00:00' and task0."sys_created_on" < '2016-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2016-11-06 09:00:00' and task0."sys_created_on" < '2017-03-12 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2017-03-12 10:00:00' and task0."sys_created_on" < '2017-11-05 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2017-11-05 09:00:00' and task0."sys_created_on" < '2018-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2018-03-11 10:00:00' and task0."sys_created_on" < '2018-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2018-11-04 09:00:00' and task0."sys_created_on" < '2019-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2019-03-10 10:00:00' and task0."sys_created_on" < '2019-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2019-11-03 09:00:00' and task0."sys_created_on" < '2020-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2020-03-08 10:00:00' and task0."sys_created_on" < '2020-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2020-11-01 09:00:00' and task0."sys_created_on" < '2021-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2021-03-14 10:00:00' and task0."sys_created_on" < '2021-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2021-11-07 09:00:00' and task0."sys_created_on" < '2022-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2022-03-13 10:00:00' and task0."sys_created_on" < '2022-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second else task0."sys_created_on" + interval '-28800' second end,'%Y') AS yearref FROM task task0 WHERE task0."sys_class_name" = 'incident' AND task0."priority" IS NOT NULL ;
% .explain # table_name
% mal # name
% clob # type
% 1023 # length
function user.s4_0():void;
    X_142:void := querylog.define("explain select sys.timestamp_to_str(case when task0.\"sys_created_on\" >= \\'1999-10-31 09:00:00\\' and task0.\"sys_created_on\" < \\'2000-04-02 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2000-04-02 10:00:00\\' and task0.\"sys_created_on\" < \\'2000-10-29 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2000-10-29 09:00:00\\' and task0.\"sys_created_on\" < \\'2001-04-01 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2001-04-01 10:00:00\\' and task0.\"sys_created_on\" < \\'2001-10-28 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2001-10-28 09:00:00\\' and task0.\"sys_created_on\" < \\'2002-04-07 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2002-04-07 10:00:00\\' and
barrier X_1678:bit := language.dataflow();
    X_1515:bat[:str] := bat.new(nil:str);
    X_1521:bat[:int] := bat.new(nil:int);
    X_1519:bat[:int] := bat.new(nil:int);
    X_1518:bat[:str] := bat.new(nil:str);
    X_1517:bat[:str] := bat.new(nil:str);
    X_188:bat[:timestamp] := bat.new(nil:timestamp);
    X_199:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "1999-10-31 09:00:00.000":timestamp, "2000-04-02 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_202:bat[:bit] := batcalc.isnil(X_199:bat[:bit]);
    X_215:bat[:bit] := batcalc.ifthenelse(X_202:bat[:bit], false:bit, X_199:bat[:bit]);
    X_1361:bat[:timestamp] := mal.manifold("mtime":str, "timestamp_add_msec_interval":str, X_188:bat[:timestamp], -28800000:lng);
    X_225:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2000-04-02 10:00:00.000":timestamp, "2000-10-29 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_226:bat[:bit] := batcalc.isnil(X_225:bat[:bit]);
    X_241:bat[:bit] := batcalc.ifthenelse(X_226:bat[:bit], false:bit, X_225:bat[:bit]);
    X_1365:bat[:timestamp] := mal.manifold("mtime":str, "timestamp_add_msec_interval":str, X_188:bat[:timestamp], -25200000:lng);
    X_251:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2000-10-29 09:00:00.000":timestamp, "2001-04-01 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_252:bat[:bit] := batcalc.isnil(X_251:bat[:bit]);
    X_265:bat[:bit] := batcalc.ifthenelse(X_252:bat[:bit], false:bit, X_251:bat[:bit]);
    X_276:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2001-04-01 10:00:00.000":timestamp, "2001-10-28 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_279:bat[:bit] := batcalc.isnil(X_276:bat[:bit]);
    X_291:bat[:bit] := batcalc.ifthenelse(X_279:bat[:bit], false:bit, X_276:bat[:bit]);
    X_301:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2001-10-28 09:00:00.000":timestamp, "2002-04-07 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_302:bat[:bit] := batcalc.isnil(X_301:bat[:bit]);
    X_317:bat[:bit] := batcalc.ifthenelse(X_302:bat[:bit], false:bit, X_301:bat[:bit]);
    X_328:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2002-04-07 10:00:00.000":timestamp, "2002-10-27 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_329:bat[:bit] := batcalc.isnil(X_328:bat[:bit]);
    X_341:bat[:bit] := batcalc.ifthenelse(X_329:bat[:bit], false:bit, X_328:bat[:bit]);
    X_351:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2002-10-27 09:00:00.000":timestamp, "2003-04-06 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_354:bat[:bit] := batcalc.isnil(X_351:bat[:bit]);
    X_368:bat[:bit] := batcalc.ifthenelse(X_354:bat[:bit], false:bit, X_351:bat[:bit]);
    X_378:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2003-04-06 10:00:00.000":timestamp, "2003-10-26 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_379:bat[:bit] := batcalc.isnil(X_378:bat[:bit]);
    X_393:bat[:bit] := batcalc.ifthenelse(X_379:bat[:bit], false:bit, X_378:bat[:bit]);
    X_404:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2003-10-26 09:00:00.000":timestamp, "2004-04-04 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_405:bat[:bit] := batcalc.isnil(X_404:bat[:bit]);
    X_417:bat[:bit] := batcalc.ifthenelse(X_405:bat[:bit], false:bit, X_404:bat[:bit]);
    X_428:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2004-04-04 10:00:00.000":timestamp, "2004-10-31 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_431:bat[:bit] := batcalc.isnil(X_428:bat[:bit]);
    X_444:bat[:bit] := batcalc.ifthenelse(X_431:bat[:bit], false:bit, X_428:bat[:bit]);
    X_453:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2004-10-31 09:00:00.000":timestamp, "2005-04-03 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_454:bat[:bit] := batcalc.isnil(X_453:bat[:bit]);
    X_470:bat[:bit] := batcalc.ifthenelse(X_454:bat[:bit], false:bit, X_453:bat[:bit]);
    X_481:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2005-04-03 10:00:00.000":timestamp, "2005-10-30 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_482:bat[:bit] := batcalc.isnil(X_481:bat[:bit]);
    X_493:bat[:bit] := batcalc.ifthenelse(X_482:bat[:bit], false:bit, X_481:bat[:bit]);
    X_504:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2005-10-30 09:00:00.000":timestamp, "2006-04-02 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_507:bat[:bit] := batcalc.isnil(X_504:bat[:bit]);
    X_520:bat[:bit] := batcalc.ifthenelse(X_507:bat[:bit], false:bit, X_504:bat[:bit]);
    X_530:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2006-04-02 10:00:00.000":timestamp, "2006-10-29 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_531:bat[:bit] := batcalc.isnil(X_530:bat[:bit]);
    X_546:bat[:bit] := batcalc.ifthenelse(X_531:bat[:bit], false:bit, X_530:bat[:bit]);
    X_556:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2006-10-29 09:00:00.000":timestamp, "2007-03-11 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_557:bat[:bit] := batcalc.isnil(X_556:bat[:bit]);
    X_570:bat[:bit] := batcalc.ifthenelse(X_557:bat[:bit], false:bit, X_556:bat[:bit]);
    X_581:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2007-03-11 10:00:00.000":timestamp, "2007-11-04 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_584:bat[:bit] := batcalc.isnil(X_581:bat[:bit]);
    X_596:bat[:bit] := batcalc.ifthenelse(X_584:bat[:bit], false:bit, X_581:bat[:bit]);
    X_606:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2007-11-04 09:00:00.000":timestamp, "2008-03-09 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_607:bat[:bit] := batcalc.isnil(X_606:bat[:bit]);
    X_622:bat[:bit] := batcalc.ifthenelse(X_607:bat[:bit], false:bit, X_606:bat[:bit]);
    X_633:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2008-03-09 10:00:00.000":timestamp, "2008-11-02 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_634:bat[:bit] := batcalc.isnil(X_633:bat[:bit]);
    X_646:bat[:bit] := batcalc.ifthenelse(X_634:bat[:bit], false:bit, X_633:bat[:bit]);
    X_656:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2008-11-02 09:00:00.000":timestamp, "2009-03-08 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_659:bat[:bit] := batcalc.isnil(X_656:bat[:bit]);
    X_673:bat[:bit] := batcalc.ifthenelse(X_659:bat[:bit], false:bit, X_656:bat[:bit]);
    X_683:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2009-03-08 10:00:00.000":timestamp, "2009-11-01 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_684:bat[:bit] := batcalc.isnil(X_683:bat[:bit]);
    X_698:bat[:bit] := batcalc.ifthenelse(X_684:bat[:bit], false:bit, X_683:bat[:bit]);
    X_709:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2009-11-01 09:00:00.000":timestamp, "2010-03-14 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_710:bat[:bit] := batcalc.isnil(X_709:bat[:bit]);
    X_722:bat[:bit] := batcalc.ifthenelse(X_710:bat[:bit], false:bit, X_709:bat[:bit]);
    X_733:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2010-03-14 10:00:00.000":timestamp, "2010-11-07 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_736:bat[:bit] := batcalc.isnil(X_733:bat[:bit]);
    X_749:bat[:bit] := batcalc.ifthenelse(X_736:bat[:bit], false:bit, X_733:bat[:bit]);
    X_758:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2010-11-07 09:00:00.000":timestamp, "2011-03-13 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_759:bat[:bit] := batcalc.isnil(X_758:bat[:bit]);
    X_775:bat[:bit] := batcalc.ifthenelse(X_759:bat[:bit], false:bit, X_758:bat[:bit]);
    X_786:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2011-03-13 10:00:00.000":timestamp, "2011-11-06 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_787:bat[:bit] := batcalc.isnil(X_786:bat[:bit]);
    X_798:bat[:bit] := batcalc.ifthenelse(X_787:bat[:bit], false:bit, X_786:bat[:bit]);
    X_809:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2011-11-06 09:00:00.000":timestamp, "2012-03-11 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_812:bat[:bit] := batcalc.isnil(X_809:bat[:bit]);
    X_825:bat[:bit] := batcalc.ifthenelse(X_812:bat[:bit], false:bit, X_809:bat[:bit]);
    X_835:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2012-03-11 10:00:00.000":timestamp, "2012-11-04 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_836:bat[:bit] := batcalc.isnil(X_835:bat[:bit]);
    X_851:bat[:bit] := batcalc.ifthenelse(X_836:bat[:bit], false:bit, X_835:bat[:bit]);
    X_861:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2012-11-04 09:00:00.000":timestamp, "2013-03-10 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_862:bat[:bit] := batcalc.isnil(X_861:bat[:bit]);
    X_875:bat[:bit] := batcalc.ifthenelse(X_862:bat[:bit], false:bit, X_861:bat[:bit]);
    X_886:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2013-03-10 10:00:00.000":timestamp, "2013-11-03 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_889:bat[:bit] := batcalc.isnil(X_886:bat[:bit]);
    X_901:bat[:bit] := batcalc.ifthenelse(X_889:bat[:bit], false:bit, X_886:bat[:bit]);
    X_911:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2013-11-03 09:00:00.000":timestamp, "2014-03-09 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_912:bat[:bit] := batcalc.isnil(X_911:bat[:bit]);
    X_927:bat[:bit] := batcalc.ifthenelse(X_912:bat[:bit], false:bit, X_911:bat[:bit]);
    X_938:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2014-03-09 10:00:00.000":timestamp, "2014-11-02 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_939:bat[:bit] := batcalc.isnil(X_938:bat[:bit]);
    X_951:bat[:bit] := batcalc.ifthenelse(X_939:bat[:bit], false:bit, X_938:bat[:bit]);
    X_961:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2014-11-02 09:00:00.000":timestamp, "2015-03-08 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_964:bat[:bit] := batcalc.isnil(X_961:bat[:bit]);
    X_978:bat[:bit] := batcalc.ifthenelse(X_964:bat[:bit], false:bit, X_961:bat[:bit]);
    X_988:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2015-03-08 10:00:00.000":timestamp, "2015-11-01 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_989:bat[:bit] := batcalc.isnil(X_988:bat[:bit]);
    X_1003:bat[:bit] := batcalc.ifthenelse(X_989:bat[:bit], false:bit, X_988:bat[:bit]);
    X_1014:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2015-11-01 09:00:00.000":timestamp, "2016-03-13 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1015:bat[:bit] := batcalc.isnil(X_1014:bat[:bit]);
    X_1027:bat[:bit] := batcalc.ifthenelse(X_1015:bat[:bit], false:bit, X_1014:bat[:bit]);
    X_1038:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2016-03-13 10:00:00.000":timestamp, "2016-11-06 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1041:bat[:bit] := batcalc.isnil(X_1038:bat[:bit]);
    X_1054:bat[:bit] := batcalc.ifthenelse(X_1041:bat[:bit], false:bit, X_1038:bat[:bit]);
    X_1063:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2016-11-06 09:00:00.000":timestamp, "2017-03-12 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1064:bat[:bit] := batcalc.isnil(X_1063:bat[:bit]);
    X_1080:bat[:bit] := batcalc.ifthenelse(X_1064:bat[:bit], false:bit, X_1063:bat[:bit]);
    X_1091:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2017-03-12 10:00:00.000":timestamp, "2017-11-05 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1092:bat[:bit] := batcalc.isnil(X_1091:bat[:bit]);
    X_1103:bat[:bit] := batcalc.ifthenelse(X_1092:bat[:bit], false:bit, X_1091:bat[:bit]);
    X_1114:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2017-11-05 09:00:00.000":timestamp, "2018-03-11 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1117:bat[:bit] := batcalc.isnil(X_1114:bat[:bit]);
    X_1130:bat[:bit] := batcalc.ifthenelse(X_1117:bat[:bit], false:bit, X_1114:bat[:bit]);
    X_1140:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2018-03-11 10:00:00.000":timestamp, "2018-11-04 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1141:bat[:bit] := batcalc.isnil(X_1140:bat[:bit]);
    X_1156:bat[:bit] := batcalc.ifthenelse(X_1141:bat[:bit], false:bit, X_1140:bat[:bit]);
    X_1166:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2018-11-04 09:00:00.000":timestamp, "2019-03-10 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1167:bat[:bit] := batcalc.isnil(X_1166:bat[:bit]);
    X_1180:bat[:bit] := batcalc.ifthenelse(X_1167:bat[:bit], false:bit, X_1166:bat[:bit]);
    X_1191:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2019-03-10 10:00:00.000":timestamp, "2019-11-03 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1194:bat[:bit] := batcalc.isnil(X_1191:bat[:bit]);
    X_1206:bat[:bit] := batcalc.ifthenelse(X_1194:bat[:bit], false:bit, X_1191:bat[:bit]);
    X_1216:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2019-11-03 09:00:00.000":timestamp, "2020-03-08 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1217:bat[:bit] := batcalc.isnil(X_1216:bat[:bit]);
    X_1232:bat[:bit] := batcalc.ifthenelse(X_1217:bat[:bit], false:bit, X_1216:bat[:bit]);
    X_1243:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2020-03-08 10:00:00.000":timestamp, "2020-11-01 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1244:bat[:bit] := batcalc.isnil(X_1243:bat[:bit]);
    X_1256:bat[:bit] := batcalc.ifthenelse(X_1244:bat[:bit], false:bit, X_1243:bat[:bit]);
    X_1266:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2020-11-01 09:00:00.000":timestamp, "2021-03-14 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1269:bat[:bit] := batcalc.isnil(X_1266:bat[:bit]);
    X_1283:bat[:bit] := batcalc.ifthenelse(X_1269:bat[:bit], false:bit, X_1266:bat[:bit]);
    X_1293:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2021-03-14 10:00:00.000":timestamp, "2021-11-07 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1294:bat[:bit] := batcalc.isnil(X_1293:bat[:bit]);
    X_1308:bat[:bit] := batcalc.ifthenelse(X_1294:bat[:bit], false:bit, X_1293:bat[:bit]);
    X_1319:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2021-11-07 09:00:00.000":timestamp, "2022-03-13 10:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1320:bat[:bit] := batcalc.isnil(X_1319:bat[:bit]);
    X_1332:bat[:bit] := batcalc.ifthenelse(X_1320:bat[:bit], false:bit, X_1319:bat[:bit]);
    X_1343:bat[:bit] := batcalc.between(X_188:bat[:timestamp], "2022-03-13 10:00:00.000":timestamp, "2022-11-06 09:00:00.000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1346:bat[:bit] := batcalc.isnil(X_1343:bat[:bit]);
    X_1359:bat[:bit] := batcalc.ifthenelse(X_1346:bat[:bit], false:bit, X_1343:bat[:bit]);
    X_1460:bat[:timestamp] := batcalc.ifthenelse(X_1359:bat[:bit], X_1365:bat[:timestamp], X_1361:bat[:timestamp]);
    X_1463:bat[:timestamp] := batcalc.ifthenelse(X_1332:bat[:bit], X_1361:bat[:timestamp], X_1460:bat[:timestamp]);
    X_1464:bat[:timestamp] := batcalc.ifthenelse(X_1308:bat[:bit], X_1365:bat[:timestamp], X_1463:bat[:timestamp]);
    X_1465:bat[:timestamp] := batcalc.ifthenelse(X_1283:bat[:bit], X_1361:bat[:timestamp], X_1464:bat[:timestamp]);
    X_1466:bat[:timestamp] := batcalc.ifthenelse(X_1256:bat[:bit], X_1365:bat[:timestamp], X_1465:bat[:timestamp]);
    X_1467:bat[:timestamp] := batcalc.ifthenelse(X_1232:bat[:bit], X_1361:bat[:timestamp], X_1466:bat[:timestamp]);
    X_1468:bat[:timestamp] := batcalc.ifthenelse(X_1206:bat[:bit], X_1365:bat[:timestamp], X_1467:bat[:timestamp]);
    X_1469:bat[:timestamp] := batcalc.ifthenelse(X_1180:bat[:bit], X_1361:bat[:timestamp], X_1468:bat[:timestamp]);
    X_1470:bat[:timestamp] := batcalc.ifthenelse(X_1156:bat[:bit], X_1365:bat[:timestamp], X_1469:bat[:timestamp]);
    X_1471:bat[:timestamp] := batcalc.ifthenelse(X_1130:bat[:bit], X_1361:bat[:timestamp], X_1470:bat[:timestamp]);
    X_1472:bat[:timestamp] := batcalc.ifthenelse(X_1103:bat[:bit], X_1365:bat[:timestamp], X_1471:bat[:timestamp]);
    X_1473:bat[:timestamp] := batcalc.ifthenelse(X_1080:bat[:bit], X_1361:bat[:timestamp], X_1472:bat[:timestamp]);
    X_1474:bat[:timestamp] := batcalc.ifthenelse(X_1054:bat[:bit], X_1365:bat[:timestamp], X_1473:bat[:timestamp]);
    X_1475:bat[:timestamp] := batcalc.ifthenelse(X_1027:bat[:bit], X_1361:bat[:timestamp], X_1474:bat[:timestamp]);
    X_1476:bat[:timestamp] := batcalc.ifthenelse(X_1003:bat[:bit], X_1365:bat[:timestamp], X_1475:bat[:timestamp]);
    X_1477:bat[:timestamp] := batcalc.ifthenelse(X_978:bat[:bit], X_1361:bat[:timestamp], X_1476:bat[:timestamp]);
    X_1478:bat[:timestamp] := batcalc.ifthenelse(X_951:bat[:bit], X_1365:bat[:timestamp], X_1477:bat[:timestamp]);
    X_1479:bat[:timestamp] := batcalc.ifthenelse(X_927:bat[:bit], X_1361:bat[:timestamp], X_1478:bat[:timestamp]);
    X_1480:bat[:timestamp] := batcalc.ifthenelse(X_901:bat[:bit], X_1365:bat[:timestamp], X_1479:bat[:timestamp]);
    X_1481:bat[:timestamp] := batcalc.ifthenelse(X_875:bat[:bit], X_1361:bat[:timestamp], X_1480:bat[:timestamp]);
    X_1482:bat[:timestamp] := batcalc.ifthenelse(X_851:bat[:bit], X_1365:bat[:timestamp], X_1481:bat[:timestamp]);
    X_1483:bat[:timestamp] := batcalc.ifthenelse(X_825:bat[:bit], X_1361:bat[:timestamp], X_1482:bat[:timestamp]);
    X_1484:bat[:timestamp] := batcalc.ifthenelse(X_798:bat[:bit], X_1365:bat[:timestamp], X_1483:bat[:timestamp]);
    X_1485:bat[:timestamp] := batcalc.ifthenelse(X_775:bat[:bit], X_1361:bat[:timestamp], X_1484:bat[:timestamp]);
    X_1486:bat[:timestamp] := batcalc.ifthenelse(X_749:bat[:bit], X_1365:bat[:timestamp], X_1485:bat[:timestamp]);
    X_1487:bat[:timestamp] := batcalc.ifthenelse(X_722:bat[:bit], X_1361:bat[:timestamp], X_1486:bat[:timestamp]);
    X_1488:bat[:timestamp] := batcalc.ifthenelse(X_698:bat[:bit], X_1365:bat[:timestamp], X_1487:bat[:timestamp]);
    X_1489:bat[:timestamp] := batcalc.ifthenelse(X_673:bat[:bit], X_1361:bat[:timestamp], X_1488:bat[:timestamp]);
    X_1490:bat[:timestamp] := batcalc.ifthenelse(X_646:bat[:bit], X_1365:bat[:timestamp], X_1489:bat[:timestamp]);
    X_1491:bat[:timestamp] := batcalc.ifthenelse(X_622:bat[:bit], X_1361:bat[:timestamp], X_1490:bat[:timestamp]);
    X_1492:bat[:timestamp] := batcalc.ifthenelse(X_596:bat[:bit], X_1365:bat[:timestamp], X_1491:bat[:timestamp]);
    X_1493:bat[:timestamp] := batcalc.ifthenelse(X_570:bat[:bit], X_1361:bat[:timestamp], X_1492:bat[:timestamp]);
    X_1496:bat[:timestamp] := batcalc.ifthenelse(X_546:bat[:bit], X_1365:bat[:timestamp], X_1493:bat[:timestamp]);
    X_1497:bat[:timestamp] := batcalc.ifthenelse(X_520:bat[:bit], X_1361:bat[:timestamp], X_1496:bat[:timestamp]);
    X_1498:bat[:timestamp] := batcalc.ifthenelse(X_493:bat[:bit], X_1365:bat[:timestamp], X_1497:bat[:timestamp]);
    X_1499:bat[:timestamp] := batcalc.ifthenelse(X_470:bat[:bit], X_1361:bat[:timestamp], X_1498:bat[:timestamp]);
    X_1500:bat[:timestamp] := batcalc.ifthenelse(X_444:bat[:bit], X_1365:bat[:timestamp], X_1499:bat[:timestamp]);
    X_1501:bat[:timestamp] := batcalc.ifthenelse(X_417:bat[:bit], X_1361:bat[:timestamp], X_1500:bat[:timestamp]);
    X_1502:bat[:timestamp] := batcalc.ifthenelse(X_393:bat[:bit], X_1365:bat[:timestamp], X_1501:bat[:timestamp]);
    X_1503:bat[:timestamp] := batcalc.ifthenelse(X_368:bat[:bit], X_1361:bat[:timestamp], X_1502:bat[:timestamp]);
    X_1504:bat[:timestamp] := batcalc.ifthenelse(X_341:bat[:bit], X_1365:bat[:timestamp], X_1503:bat[:timestamp]);
    X_1505:bat[:timestamp] := batcalc.ifthenelse(X_317:bat[:bit], X_1361:bat[:timestamp], X_1504:bat[:timestamp]);
    X_1506:bat[:timestamp] := batcalc.ifthenelse(X_291:bat[:bit], X_1365:bat[:timestamp], X_1505:bat[:timestamp]);
    X_1507:bat[:timestamp] := batcalc.ifthenelse(X_265:bat[:bit], X_1361:bat[:timestamp], X_1506:bat[:timestamp]);
    X_1508:bat[:timestamp] := batcalc.ifthenelse(X_241:bat[:bit], X_1365:bat[:timestamp], X_1507:bat[:timestamp]);
    X_1509:bat[:timestamp] := batcalc.ifthenelse(X_215:bat[:bit], X_1361:bat[:timestamp], X_1508:bat[:timestamp]);
    X_1511:bat[:str] := mal.manifold("mtime":str, "timestamp_to_str":str, X_1509:bat[:timestamp], "%Y":str);
    X_1522:bat[:str] := bat.append(X_1515:bat[:str], "sys.L2":str);
    X_1524:bat[:str] := bat.append(X_1517:bat[:str], "yearref":str);
    X_1526:bat[:str] := bat.append(X_1518:bat[:str], "clob":str);
    X_1528:bat[:int] := bat.append(X_1519:bat[:int], 0:int);
    X_1530:bat[:int] := bat.append(X_1521:bat[:int], 0:int);
    language.pass(X_199:bat[:bit]);
    language.pass(X_225:bat[:bit]);
    language.pass(X_251:bat[:bit]);
    language.pass(X_276:bat[:bit]);
    language.pass(X_301:bat[:bit]);
    language.pass(X_328:bat[:bit]);
    language.pass(X_351:bat[:bit]);
    language.pass(X_378:bat[:bit]);
    language.pass(X_404:bat[:bit]);
    language.pass(X_428:bat[:bit]);
    language.pass(X_453:bat[:bit]);
    language.pass(X_481:bat[:bit]);
    language.pass(X_504:bat[:bit]);
    language.pass(X_530:bat[:bit]);
    language.pass(X_556:bat[:bit]);
    language.pass(X_581:bat[:bit]);
    language.pass(X_606:bat[:bit]);
    language.pass(X_633:bat[:bit]);
    language.pass(X_656:bat[:bit]);
    language.pass(X_683:bat[:bit]);
    language.pass(X_709:bat[:bit]);
    language.pass(X_733:bat[:bit]);
    language.pass(X_758:bat[:bit]);
    language.pass(X_786:bat[:bit]);
    language.pass(X_809:bat[:bit]);
    language.pass(X_835:bat[:bit]);
    language.pass(X_861:bat[:bit]);
    language.pass(X_886:bat[:bit]);
    language.pass(X_911:bat[:bit]);
    language.pass(X_938:bat[:bit]);
    language.pass(X_961:bat[:bit]);
    language.pass(X_988:bat[:bit]);
    language.pass(X_1014:bat[:bit]);
    language.pass(X_1038:bat[:bit]);
    language.pass(X_1063:bat[:bit]);
    language.pass(X_1091:bat[:bit]);
    language.pass(X_1114:bat[:bit]);
    language.pass(X_1140:bat[:bit]);
    language.pass(X_1166:bat[:bit]);
    language.pass(X_1191:bat[:bit]);
    language.pass(X_1216:bat[:bit]);
    language.pass(X_1243:bat[:bit]);
    language.pass(X_1266:bat[:bit]);
    language.pass(X_1293:bat[:bit]);
    language.pass(X_1319:bat[:bit]);
    language.pass(X_188:bat[:timestamp]);
    language.pass(X_1343:bat[:bit]);
    language.pass(X_1365:bat[:timestamp]);
    language.pass(X_1361:bat[:timestamp]);
exit X_1678:bit;
    sql.resultSet(X_1522:bat[:str], X_1524:bat[:str], X_1526:bat[:str], X_1528:bat[:int], X_1530:bat[:int], X_1511:bat[:str]);
end user.s4_0;
#inline               actions= 0 time=24 usec 
#remap                actions=230 time=419 usec 
#costmodel            actions= 1 time=12 usec 
#coercion             actions=416 time=78 usec 
#aliases              actions=649 time=118 usec 
#evaluate             actions=185 time=356 usec 
#emptybind            actions=11 time=51 usec 
#pushselect           actions= 0 time=18 usec 
#aliases              actions=188 time=68 usec 
#mergetable           actions= 0 time=164 usec 
#deadcode             actions=18 time=48 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions=317 time=93 usec 
#commonTerms          actions=91 time=187 usec 
#projectionpath       actions= 0 time=10 usec 
#deadcode             actions=91 time=39 usec 
#reorder              actions= 1 time=76 usec 
#matpack              actions= 0 time=1 usec 
#dataflow             actions= 1 time=109 usec 
#multiplex            actions= 3 time=28 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=3 usec 
#deadcode             actions= 0 time=33 usec 
#wlc                  actions= 0 time=0 usec 
#garbagecollector     actions= 1 time=144 usec 
#total                actions=29 time=2531 usec 

# 14:08:13 >  
# 14:08:13 >  "Done."
# 14:08:13 >  

